import { setupWorker } from 'msw/browser';

import { handlers } from './handlers/index';

// Configura√ß√£o b√°sica do worker
export const worker = setupWorker(...handlers);

// Fun√ß√£o para inicializar com configura√ß√µes avan√ßadas
export async function startWorker() {
  try {
    await worker.start({
      // Configura√ß√£o para ignorar requisi√ß√µes n√£o tratadas e para UI-Avatars
      onUnhandledRequest: (request, print) => {
        // Verificar se a URL cont√©m ui-avatars.com
        if (request.url.includes('ui-avatars.com')) {
          // Silenciosamente ignorar (sem aviso no console)
          return;
        }

        // Para todas as outras requisi√ß√µes n√£o tratadas
        // Mostrar aviso no console (opcional)
        print.warning();
      },

      // Configura√ß√£o do service worker
      serviceWorker: {
        url: '/mockServiceWorker.js',
        // Op√ß√µes adicionais se necess√°rio
      },
    });

    console.log('üî∂ Mock Service Worker inicializado');
  } catch (error) {
    console.error('‚ùå Erro ao inicializar Mock Service Worker:', error);
    console.error('Detalhes do erro:', error instanceof Error ? error.message : String(error));
  }
}
